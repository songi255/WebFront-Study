vue의 특징
  - component기반
  - virtual dom
    - 일반적인 DOM의 경우
      1. HTML Parsing -> DOM Tree 생성
      2. Render Tree 생성
        - 각 DOM Tree의 Node에 Style 정보를 입힌다.
      3. Layout
        - 각 Render Tree Node들의 출력 좌표 계산
      4. Painting
        - 이미지 / Color를 입혀 출력 준비
      - DOM변경시 render tree 생성부터 다시한다.
    - virtual dom의 경우
      - DOM 제어를 모두 v-DOM에 먼저 적용 후 한번만 랜더링한다.
      - 직접적인 DOM제어는 불가능하게 막았다.
  - 모두 바꾸는게 아닌, 점진적으로 수정해나갈 수 있다.
  - 그래서 vue의 이점이 뭔가? data와 html을 연결할 수 있다! -> 이거 걍 JSP 아닌가? 흠...

MVVM
  - Model
  - View -> UI
  - ViewModel -> view 표현을 위한 코드 (사실상 Controller와 비슷하다.)
    - Vue가 바로 ViewModel에 해당한다.
  - View에서 이벤트가 발생하면 ViewModel의 콜백을 실행하고, 연산을 거쳐 View에 일괄적용하는 흐름.
  - 기존 View와 Model 사이의 의존성을 제거했다.

view 설치
  - CDN 가능하다. <script src="https://cdn.jsdelivr.net/npm/vue@2.7.8/dist/vue.min.js"></script>   
